<!--
  ~ Copyright 2009 The Apache Software Foundation
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<html t:type="Border" xmlns:t="http://tapestry.apache.org/schema/tapestry_5_1_0.xsd">
    
  <t:form>
      <p>
          Explicit and implicit ordering, all in template, using globbing:
      </p>
      <t:textfield t:id="order1" value="myproperty" t:mixins="echovalue::before:*, echovalue2::before:echovalue3, echovalue3"/>

      <p>
          Explicit and implicit ordering, all in template, no globbing, but multiple order constraints specified for at least one mixin:
      </p>
      <t:textfield t:id="order2" value="myproperty" t:mixins="echovalue::after:echovalue2;after:echovalue3, echovalue2::after:echovalue3, echovalue3"/>

      <p>Mixture of template, @Mixins, and @MixinClasses ordering, all ordered.</p>
      <input t:id="order3" value="myproperty" t:mixins="echovalue3::before:echovalue"/>

      <p>Mixture of template, @Mixins, and @MixinClasses, with the only constraints specified in the template and @Mixins</p>
      <input t:id="order4" value="myproperty" t:mixins="echovalue3::before:echovalue"/>

      <p>Mixture of template, @Mixins, and @MixinClasses, with the only constraints specified in the template and @MixinClasses</p>
      <input t:id="order5" value="myproperty" t:mixins="echovalue3::after:echovalue"/>

      <p>Mixture of template, @Mixins, @MixinClasses, and @Mixin ordering. Note that all of the above also include @Mixin without explicit ordering constraints since textfield has an implementation mixin.</p>
      <input t:id="order6" disabled="true" value="myproperty" t:mixins="echovalue::before:echovalue3"/>

      <p>Mingling mixin after with mixin before</p>
      <!-- the constraint on echoafter2 should have no effect. -->
      <t:textfield t:id="order7" value="myproperty" t:mixins="echovalue::before:echovalue2, echovalue2, echoafter::after:echoafter2, echoafter2::before:echovalue"/>
  </t:form>

</html>
