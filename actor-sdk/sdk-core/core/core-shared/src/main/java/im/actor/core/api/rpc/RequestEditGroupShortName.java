package im.actor.core.api.rpc;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.runtime.bser.*;
import im.actor.runtime.collections.*;
import static im.actor.runtime.bser.Utils.*;
import im.actor.core.network.parser.*;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import com.google.j2objc.annotations.ObjectiveCName;
import java.io.IOException;
import java.util.List;
import java.util.ArrayList;
import im.actor.core.api.*;

public class RequestEditGroupShortName extends Request<ResponseSeq> {

    public static final int HEADER = 0xae9;
    public static RequestEditGroupShortName fromBytes(byte[] data) throws IOException {
        return Bser.parse(new RequestEditGroupShortName(), data);
    }

    private ApiGroupOutPeer groupPeer;
    private String shortName;

    public RequestEditGroupShortName(@NotNull ApiGroupOutPeer groupPeer, @Nullable String shortName) {
        this.groupPeer = groupPeer;
        this.shortName = shortName;
    }

    public RequestEditGroupShortName() {

    }

    @NotNull
    public ApiGroupOutPeer getGroupPeer() {
        return this.groupPeer;
    }

    @Nullable
    public String getShortName() {
        return this.shortName;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.groupPeer = values.getObj(1, new ApiGroupOutPeer());
        this.shortName = values.optString(2);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        if (this.groupPeer == null) {
            throw new IOException();
        }
        writer.writeObject(1, this.groupPeer);
        if (this.shortName != null) {
            writer.writeString(2, this.shortName);
        }
    }

    @Override
    public String toString() {
        String res = "rpc EditGroupShortName{";
        res += "groupPeer=" + this.groupPeer;
        res += ", shortName=" + this.shortName;
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
